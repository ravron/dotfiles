[user]
	name = Riley Avron
	email = ra.git@posteo.net
	signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICmU9FoT+e+xxifnGkH3vHofbpOk3b5trob1M5zTXPKr
	useConfigOnly = true
[gpg]
	format = ssh
[gpg "ssh"]
	program = "/Applications/1Password.app/Contents/MacOS/op-ssh-sign"
	allowedSignersFile = ~/.ssh/allowed_signers
[alias]
	s = status
	d = diff
	b = branch
	c = !echo \"use switch or restore instead\" && false
	ds = diff --stat --summary
	ss = show --stat
	# Partly from https://stackoverflow.com/a/44750379/1292061. Figures out
	# origin's default branch (usually main or master), fetches that, and
	# updates the local branch of the same name. Needs to be sh compatible.
	fm = "!b=$(git symbolic-ref refs/remotes/origin/HEAD); git fetch origin ${b##*/}:${b##*/}"
	p = pull
	l = log
	dc = diff --cached
	ls = log --stat
	bv = branch -vv
	noedit = commit --amend --no-edit
	f = fetch
	co = commit
	# "switch fuzzy"
	swf = !b=$(git branch -vv | sed 's/^*/ /' | fzf -n1 --height=20% | awk '{print $1}') ";" [[ -n $b ]] && git switch $b
	# "switch fuzzy all"
	swfa = !b=$(git branch -avv | sed 's/^*/ /' | fzf -n1 --height=20% | awk '{print $1}') ";" [[ -n $b ]] && git switch $b
	# "switch fuzzy preview"
	swfp = !b=$(git branch -vv | sed 's/^*/ /' | fzf -n1 --preview='git show --color=always {1}' --preview-window=up:70% | awk '{print $1}') ";" [[ -n $b ]] && git switch $b
	w = switch
	sw = switch
[fetch]
	prune = true
[push]
	default = upstream
	recurseSubmodules = check
	autoSetupRemote = true
[log]
	decorate = true
	date = iso-local
[diff]
	tool = vimdiff
	algorithm = patience
	renames = copies
	mnemonicPrefix = false
	indentHeuristic = true
	colormoved = true
	# mnemonicPrefix = true
	# Would be nice, but arc diff chokes on it. See https://dropbox.slack.com/archives/code-workflows/p1486599378006219
	# submodule = log
[merge]
	tool = vimdiff
	conflictstyle = diff3

# Note that these colors are usually not what they "say" they are (e.g. "magenta
# bold" is really purple). Instead they're used to get at the ANSI colors that
# are replaced in my terminal with Solarized colors. "Use bold fonts" must be
# off, and "Use bright colors for bold text" must be on.
[color "diff"]
	meta = magenta
	oldMoved = red italic
	newMoved = green italic
	oldMovedAlternative = red italic
	newMovedAlternative = green italic
[color "decorate"]
	branch = blue
	remoteBranch = red
	tag = magenta bold
	stash = white
	HEAD = cyan
[rebase]
	autoStash = true
[status]
	submoduleSummary = 10
	relativePaths = false
[interactive]
	singleKey = true
[branch]
	# autoSetupMerge = always
[commit]
	verbose = true
	gpgsign = true
[format]
	pretty = fuller
[rerere]
	enabled = true
[pull]
	# ff = only
[url "ssh://git@github.com/"]
	# Rewrite URLs like https://github.com/ to ssh://git@github.com/
	insteadOf = https://github.com/
[sendemail]
	smtpEncryption = tls
	smtpServer = smtp.gmail.com
	smtpServerPort = 587
[core]
	pager = less -FX
[pager]
	log = diff-highlight | less -FX
	show = diff-highlight | less -FX
	diff = diff-highlight | less -FX
[color "diff-highlight"]
	# Derived by looking at the red and green colors in my colorscheme and
	# dropping their HSB brightness "enough"
	oldHighlight = "normal #67120e"
	newHighlight = "normal #40410d"
	oldReset = normal black
	newReset = normal black
# Use this include to specify an email to use on this machine by default, and
# optionally override it to your work email based on path to a given git
# directory. Including it at the end makes sure any options specified there have
# precedence over defaults specified above.
#   git config --file ~/.config/git/private_config user.email <personal_email>
#   git config --file ~/.config/git/private_config includeIf.gitdir:~/your/work/dir.path/ work_config
#   git config --file ~/.config/git/work_config user.email <work_email>
[include]
	path = private_config
[http]
	cookiefile = /Users/ravron/.gitcookies
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
